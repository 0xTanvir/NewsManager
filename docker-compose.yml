services:
  frontend:
    build: 
      context: ./frontend
    container_name: newsmanager_frontend
    restart: always
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost/backend-api
    depends_on:
      - backend
    networks:
      - newsmanager_network

  backend:
    build: ./backend
    container_name: newsmanager_backend
    restart: always
    environment:
      PROJECT_NAME: News Manager
      POSTGRES_SERVER: 194.238.28.227
      POSTGRES_PORT: 5432
      POSTGRES_DB: news_manager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      BACKEND_CORS_ORIGINS: "http://localhost,http://localhost:3000,http://194.238.28.227,http://194.238.28.227:3000"
    depends_on:
      - db
    networks:
      - newsmanager_network

  db:
    image: postgres:17
    container_name: newsmanager_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: news_manager
    volumes:
      - $HOME/docker/volumes/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - newsmanager_network

  nginx:
    image: nginx:latest
    container_name: newsmanager_nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - newsmanager_network

networks:
  newsmanager_network:
